name: Build/Push (master)

on:
  push:
    branches:
      - 'master'
  pull_request:
    branches:
      - '*'

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      docker: ${{ steps.filter.outputs.docker }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filters: |
            docker:
              - 'Dockerfile'
              - 'root/**'
  build-and-push-docker:
    runs-on: ubuntu-latest
    needs: changes
    if: |
      (needs.changes.outputs.docker == 'true' && github.event_name != 'pull_request')
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push docker image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/arm64,linux/amd64
          push: true
          tags: jsylvis/docker-deluge-openvpn:latest
  build-docker:
    runs-on: ubuntu-latest
    needs: changes
    if: |
      (needs.changes.outputs.docker == 'true' && github.event_name == 'pull_request')
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build docker image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/arm64,linux/amd64
          push: false
          tags: jsylvis/docker-deluge-openvpn:latest